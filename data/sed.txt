=========================================
=== Справка по команде sed.
=== Ищет, заменяет, вставляет и удаляет строки в файле.
=========================================

Основной синтаксис команды SED:
sed [ПАРАМЕТР]… {только-сценарий-если-нет-другого-сценария} [входной-файл]…

Опции утилиты:
-p   вывести на экран
-d   удалить
-i   выполнять изменения непосредственно в файле
-n   не выводить результат замены/поиска на экран (--quiet, --silent)
-e   указывает на передачу инструкции (команда замены/удаления или выражение для поиска/фильтрации). Нужен, если Вы передаете более 1 инструкции
-E   расширенный regex, ближе к JavaScript, Go. Активны спец символы: [0-9]+
-r   расширенный regex синтаксис. Спец символы активны по умолчанию (--regexp-extended)
-P   perl-совместимый regex синтаксис
-s   consider files as separate rather than as a single continuous long stream (--separate)

1. Вывод содержимого файла:
    $ sed 's/.*/' sample.txt

2. Вывод определенной строки (2):
    $ sed -n 2p sample.txt

3. Замена вхождения "номер" на "цифра" во всем файле:
   Замена всех вхождений опция "g":
    $ sed 's/номер/цифра/' sample.txt
   Замена первого вхождения без опции "g":
    $ sed 's/номер/цифра/g' sample.txt

4. Замена подстроки в определенной (3) строке:
    $ sed '3 s/это/был/' sample.txt

5. Замена подстроки в определенном вхождении (2) в строке файла:
    $ sed 's/это/был/2' sample.txt

6. Замена подстроки с игнорированием регистра, флаг i:
    $ sed -n 's/серебро/золото/ip' sample.txt

7. Замена с использованием регулярных выражений:
   используйте синтаксис \1 для обращения к захваченным группам
    $ sed 's/\(This.*\)old\(.*\)/\1new\2/' sample.txt

8. Замена в нескольких файлах:
    $ sed 's/old/new/g' file1.txt file2.txt
    $ find . -type f -name "*.txt" -exec sed -i 's/updated/final/g' {} \;

9. Вывести строки только с измененным текстом:
    $ sed -n 's/это/был/2p' sample.txt

10. Удаление определенной строки:
     $ sed '2d' sample.txt

11. Удаление определенной подстроки ("s" as “substitute”):
     $ sed 's/West//' sample.txt

12. Удаление всех пустых строк ("-i" as in-place):
     $ sed -i '/^[[:space:]]*$/d' sample.txt
     $ sed '/^$/d'sample.txt

13. Удаление всех строк содержащих подстроку:
     $ sed -i '/West/d' sample.txt

14. Удаление по номерам строк:
     $ sed 1d sample.txt            # удалить первую строку
     $ sed -i '4d;7d;9d' sample.txt # удалить 4,7,9 строки
     $ sed '5, 10d' sample.txt      # удалить строки c 5-й по 10-ю

15. Вставка или добавление текста:
    вставка перед строкой команда i, для вставки после строки команду a:
     $ sed '2i This is an inserted line.' sample.txt
     $ sed '2a This is an appended line.' sample.txt

